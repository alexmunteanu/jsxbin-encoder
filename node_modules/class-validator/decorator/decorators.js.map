{"version":3,"sources":["../../src/decorator/decorators.ts"],"names":[],"mappings":"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","file":"decorators.js","sourcesContent":["import {ValidationTypes} from \"../validation/ValidationTypes\";\nimport {IsNumberOptions} from \"../validation/ValidationTypeOptions\";\nimport {ValidationOptions} from \"./ValidationOptions\";\nimport {ValidationMetadata} from \"../metadata/ValidationMetadata\";\nimport {ValidationMetadataArgs} from \"../metadata/ValidationMetadataArgs\";\nimport {ConstraintMetadata} from \"../metadata/ConstraintMetadata\";\nimport {getFromContainer} from \"../container\";\nimport {MetadataStorage} from \"../metadata/MetadataStorage\";\n\n// -------------------------------------------------------------------------\n// System\n// -------------------------------------------------------------------------\n\n/**\n * Registers custom validator class.\n */\nexport function ValidatorConstraint(options?: { name?: string, async?: boolean }) {\n    return function(target: Function) {\n        const isAsync = options && options.async ? true : false;\n        let name = options && options.name ? options.name : \"\";\n        if (!name) {\n            name = (target as any).name;\n            if (!name) // generate name if it was not given\n                name = name.replace(/\\.?([A-Z]+)/g, (x, y) => \"_\" + y.toLowerCase()).replace(/^_/, \"\");\n        }\n        const metadata = new ConstraintMetadata(target, name, isAsync);\n        getFromContainer(MetadataStorage).addConstraintMetadata(metadata);\n    };\n}\n\n/**\n * Performs validation based on the given custom validation class.\n * Validation class must be decorated with ValidatorConstraint decorator.\n */\nexport function Validate(constraintClass: Function, validationOptions?: ValidationOptions): Function;\nexport function Validate(constraintClass: Function, constraints?: any[], validationOptions?: ValidationOptions): Function;\nexport function Validate(constraintClass: Function, constraintsOrValidationOptions?: any[]|ValidationOptions, maybeValidationOptions?: ValidationOptions): Function {\n    return function(object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.CUSTOM_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraintCls: constraintClass,\n            constraints: constraintsOrValidationOptions instanceof Array ? constraintsOrValidationOptions as any[] : undefined,\n            validationOptions: !(constraintsOrValidationOptions instanceof Array) ? constraintsOrValidationOptions as ValidationOptions : maybeValidationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.NESTED_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidatePromise(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.PROMISE_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * If object has both allowed and not allowed properties a validation error will be thrown.\n */\nexport function Allow(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.WHITELIST,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: validationOptions\n    };\n    getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n\n\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateIf(condition: (object: any, value: any) => boolean, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.CONDITIONAL_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [condition],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n// -------------------------------------------------------------------------\n// Common checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if given value is defined (!== undefined, !== null).\n */\nexport function IsDefined(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_DEFINED,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value match (\"===\") the comparison.\n */\nexport function Equals(comparison: any, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.EQUALS,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [comparison],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value does not match (\"!==\") the comparison.\n */\nexport function NotEquals(comparison: any, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.NOT_EQUALS,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [comparison],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function IsEmpty(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_EMPTY,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_NOT_EMPTY,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if value is in a array of allowed values.\n */\nexport function IsIn(values: any[], validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_IN,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [values],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if value is not in a array of disallowed values.\n */\nexport function IsNotIn(values: any[], validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_NOT_IN,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [values],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.CONDITIONAL_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [(object: any, value: any) => {\n                return object[propertyName] !== null && object[propertyName] !== undefined;\n            }],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n// -------------------------------------------------------------------------\n// Type checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if a value is a boolean.\n */\nexport function IsBoolean(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_BOOLEAN,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a latitude,longitude.\n */\nexport function IsLatLong(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_LATLONG,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a latitude,longitude.\n */\nexport function IsLatitude(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_LONGITUDE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a latitude,longitude.\n */\nexport function IsLongitude(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_LATITUDE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a date.\n */\nexport function IsDate(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_DATE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a number.\n */\nexport function IsNumber(options: IsNumberOptions = {}, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_NUMBER,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is an integer number.\n */\nexport function IsInt(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_INT,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a string.\n */\nexport function IsString(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_STRING,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\nexport function IsDateString(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_DATE_STRING,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is an array.\n */\nexport function IsArray(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ARRAY,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a value is a number enum.\n */\nexport function IsEnum(entity: Object, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ENUM,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [entity],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n\n// -------------------------------------------------------------------------\n// Number checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if the value is a number that's divisible by another.\n */\nexport function IsDivisibleBy(num: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_DIVISIBLE_BY,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [num],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is a positive number.\n */\nexport function IsPositive(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_POSITIVE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is a negative number.\n */\nexport function IsNegative(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_NEGATIVE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n/**\n * Checks if the given number is greater than or equal to given number.\n */\nexport function Min(min: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MIN,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [min],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the given number is less than or equal to given number.\n */\nexport function Max(max: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MAX,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [max],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n// -------------------------------------------------------------------------\n// Date checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MinDate(date: Date, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MIN_DATE,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [date],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is a date that's before the specified date.\n */\nexport function MaxDate(date: Date, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MAX_DATE,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [date],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n// -------------------------------------------------------------------------\n// String-as-types checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if a string is a boolean.\n */\nexport function IsBooleanString(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_BOOLEAN_STRING,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a number.\n */\nexport function IsNumberString(validationOptions?: ValidationOptions, NumberOptions?: IsNumberOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_NUMBER_STRING,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [NumberOptions],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n// -------------------------------------------------------------------------\n// String checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if the string contains the seed.\n */\nexport function Contains(seed: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.CONTAINS,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [seed],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string does not contain the seed.\n */\nexport function NotContains(seed: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.NOT_CONTAINS,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [seed],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains only letters (a-zA-Z).\n */\nexport function IsAlpha(locale?: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ALPHA,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [locale],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains only letters and numbers.\n */\nexport function IsAlphanumeric(locale?: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ALPHANUMERIC,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [locale],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the given number is a valid decimal.\n */\nexport function IsDecimal(options?: ValidatorJS.IsDecimalOptions, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_DECIMAL,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains ASCII chars only.\n */\nexport function IsAscii(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ASCII,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if a string is base64 encoded.\n */\nexport function IsBase64(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_BASE64,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string's length (in bytes) falls in a range.\n */\nexport function IsByteLength(min: number, max?: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_BYTE_LENGTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [min, max],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a credit card.\n */\nexport function IsCreditCard(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_CREDIT_CARD,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a valid currency amount.\n */\nexport function IsCurrency(options?: ValidatorJS.IsCurrencyOptions, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_CURRENCY,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is an email.\n */\nexport function IsEmail(options?: ValidatorJS.IsEmailOptions, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_EMAIL,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n */\nexport function IsFQDN(options?: ValidatorJS.IsFQDNOptions, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_FQDN,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains any full-width chars.\n */\nexport function IsFullWidth(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_FULL_WIDTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains any half-width chars.\n */\nexport function IsHalfWidth(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_HALF_WIDTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains a mixture of full and half-width chars.\n */\nexport function IsVariableWidth(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_VARIABLE_WIDTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a hexadecimal color.\n */\nexport function IsHexColor(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_HEX_COLOR,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a hexadecimal number.\n */\nexport function IsHexadecimal(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_HEXADECIMAL,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is MAC Address.\n */\nexport function IsMACAddress(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_MAC_ADDRESS,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is an IP (version 4 or 6).\n */\nexport function IsIP(version?: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_IP,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [version],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Check if the string is a valid port number.\n */\nexport function IsPort(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_PORT,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n */\nexport function IsISBN(version?: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ISBN,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [version],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n */\nexport function IsISIN(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ISIN,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a valid ISO 8601 date. Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function IsISO8601(options?: ValidatorJS.IsISO8601Options, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ISO8601,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n */\nexport function IsJSON(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_JSON,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is valid JWT.\n */\nexport function IsJWT(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_JWT,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is a valid object.\n */\nexport function IsObject(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_OBJECT,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is a valid object & not empty.\n */\nexport function IsNotEmptyObject(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_NOT_EMPTY_OBJECT,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is lowercase.\n */\nexport function IsLowercase(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_LOWERCASE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a mobile phone number (locale is one of ['zh-CN', 'zh-TW', 'en-ZA', 'en-AU', 'en-HK',\n * 'pt-PT', 'fr-FR', 'el-GR', 'en-GB', 'en-US', 'en-ZM', 'ru-RU', 'nb-NO', 'nn-NO', 'vi-VN', 'en-NZ']).\n */\nexport function IsMobilePhone(locale: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_MOBILE_PHONE,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [locale],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a valid phone number.\n * @param {string} region 2 characters uppercase country code (e.g. DE, US, CH).\n * If users must enter the intl. prefix (e.g. +41), then you may pass \"ZZ\" or null as region.\n * See [google-libphonenumber, metadata.js:countryCodeToRegionCodeMap on github]{@link https://github.com/ruimarinho/google-libphonenumber/blob/1e46138878cff479aafe2ce62175c6c49cb58720/src/metadata.js#L33}\n */\nexport function IsPhoneNumber(region: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_PHONE_NUMBER,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [region],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Check if the string is a valid ISO 3166-1 alpha-2.\n * See heck if [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function IsISO31661Alpha2(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ISO31661_ALPHA_2,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Check if the string is a valid ISO 3166-1 alpha-3.\n * See heck if [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function IsISO31661Alpha3(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ISO31661_ALPHA_3,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n */\nexport function IsMongoId(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_MONGO_ID,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains one or more multibyte chars.\n */\nexport function IsMultibyte(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_MULTIBYTE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string contains any surrogate pairs chars.\n */\nexport function IsSurrogatePair(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_SURROGATE_PAIR,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is an url.\n */\nexport function IsUrl(options?: ValidatorJS.IsURLOptions, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_URL,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n */\nexport function IsUUID(version?: \"3\"|\"4\"|\"5\"|\"all\", validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_UUID,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [version],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a PushId\n */\nexport function IsFirebasePushId(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_FIREBASE_PUSH_ID,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is uppercase.\n */\nexport function IsUppercase(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_UPPERCASE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n */\nexport function Length(min: number, max?: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.LENGTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [min, max],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n */\nexport function MinLength(min: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MIN_LENGTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [min],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n */\nexport function MaxLength(max: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MAX_LENGTH,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [max],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if string matches the pattern. Either matches('foo', /foo/i) or matches('foo', 'foo', 'i').\n */\nexport function Matches(pattern: RegExp, validationOptions?: ValidationOptions): Function;\nexport function Matches(pattern: RegExp, modifiers?: string, validationOptions?: ValidationOptions): Function;\nexport function Matches(pattern: RegExp, modifiersOrAnnotationOptions?: string|ValidationOptions, validationOptions?: ValidationOptions): Function {\n    let modifiers: string;\n    if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n        validationOptions = modifiersOrAnnotationOptions as ValidationOptions;\n    } else {\n        modifiers = modifiersOrAnnotationOptions as string;\n    }\n\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.MATCHES,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [pattern, modifiers],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string correctly represents a time in the format HH:MM\n */\nexport function IsMilitaryTime(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_MILITARY_TIME,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the string is a mobile phone number (locale is one of ['zh-CN', 'zh-TW', 'en-ZA', 'en-AU', 'en-HK',\n * 'pt-PT', 'fr-FR', 'el-GR', 'en-GB', 'en-US', 'en-ZM', 'ru-RU', 'nb-NO', 'nn-NO', 'vi-VN', 'en-NZ']).\n */\nexport function IsHash(algorithm: string, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_HASH,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [algorithm],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n\n/**\n * Checks if the string is a valid ISSN.\n */\nexport function IsISSN(options?: ValidatorJS.IsISSNOptions, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_ISSN,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [options],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n// -------------------------------------------------------------------------\n// Array checkers\n// -------------------------------------------------------------------------\n\n/**\n * Checks if array contains all values from the given array of values.\n */\nexport function ArrayContains(values: any[], validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.ARRAY_CONTAINS,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [values],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if array does not contain any of the given values.\n */\nexport function ArrayNotContains(values: any[], validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.ARRAY_NOT_CONTAINS,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [values],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if given array is not empty.\n */\nexport function ArrayNotEmpty(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.ARRAY_NOT_EMPTY,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if array's length is as minimal this number.\n */\nexport function ArrayMinSize(min: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.ARRAY_MIN_SIZE,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [min],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if array's length is as maximal this number.\n */\nexport function ArrayMaxSize(max: number, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.ARRAY_MAX_SIZE,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [max],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n */\nexport function ArrayUnique(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.ARRAY_UNIQUE,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function IsInstance(targetType: new (...args: any[]) => any, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.IS_INSTANCE,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [targetType],\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n"],"sourceRoot":".."}